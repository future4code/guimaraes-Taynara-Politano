// Resolvendo problemas
/*
O enunciado é a parte mais necessário da compreensão e elaboração de toda a estrutura e funcionalidades do nosso código e é dele que vamos em um primeiro momento extrair essas especificações. Aqui entra o primeiro passo, "ter atenção no enunciado". Seguimos para o próximo que exige de nós o início da formulação e entendimento do exercício de fato. "Quebrando" o enunciado em micro partículas para entendermos o que será proposto e aqui, se enquadra o segundo passo que consiste em "retirar informações relevantes". Uma vez que temos nossa proposta compreendida com mais clareza, o terceiro passo surge pra dar início a toda configuração do nosso código, sendo ele "pensar em entradas e saídas", ou seja, o objetivo e respostas nas quais o código dará. O quarto passo é onde passamos toda nossas ideias que estão na "cabeça" em estruturas e esquemas "visuais". Onde nossas ideias começam a ganhar forma, por isso se chama "fazer um esquema visual". Passando as informações pra um ambiente visual ficamos aptos a enxergar as conjunções de fatores componentes, as sintaxes  e tudo que o compõe. A partir desses processo, entra o quinto passo que é "criar um código feio" ou seja, uma primeira formulação através de estruturas de programação, esse esquema visual. Aqui, o esquema "visual" passa a ser a estrutura do nosso código. O sexto passo é a parte de "testar a força bruta" por isso, vai ser o passo onde encontramos os erros e assim entendermos melhor a composição de cada parte do código. E o último (não menos importante) passo que é "refatorar" ou seja, a partir do código feio, do processo de entendimento da proposta e das saídas esperadas criar melhores formas de funcionalidades pro código. Isso não significa mudar sua estrutura, mas sim, entender que existem milhões de possibilidades pra deixar mais simples e funcional, sendo assim, "refatorando".
*/